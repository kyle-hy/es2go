// Code generated by es2go. DO NOT EDIT.

package model

import (
	"github.com/elastic/go-elasticsearch/v8"
	eq "github.com/kyle-hy/esquery"
)

// QueryBooksByAuthor 对author进行检索查询books的详细数据
// author string author
func QueryBooksByAuthor(es *elasticsearch.Client, author string) (*eq.Data, *eq.Query, error) {
	esQuery := &eq.ESQuery{
		Query: eq.Match("author", author),
	}

	l, t, err := eq.QueryList[Books](es, "books", esQuery)
	if err != nil {
		return nil, nil, err
	}

	data := &eq.Data{Detail: l, Total: t}
	qinfo := &eq.Query{Index: "books", DSL: esQuery}
	return data, qinfo, nil
}

// QueryBooksByName 对书名进行检索查询books的详细数据
// name string 书名
func QueryBooksByName(es *elasticsearch.Client, name string) (*eq.Data, *eq.Query, error) {
	esQuery := &eq.ESQuery{
		Query: eq.Match("name", name),
	}

	l, t, err := eq.QueryList[Books](es, "books", esQuery)
	if err != nil {
		return nil, nil, err
	}

	data := &eq.Data{Detail: l, Total: t}
	qinfo := &eq.Query{Index: "books", DSL: esQuery}
	return data, qinfo, nil
}

// QueryBooksByAuthorName 对author、书名进行检索查询books的详细数据
// author string author
// name string 书名
func QueryBooksByAuthorName(es *elasticsearch.Client, author string, name string) (*eq.Data, *eq.Query, error) {
	matches := []eq.Map{
		eq.Match("author", author),
		eq.Match("name", name),
	}
	esQuery := &eq.ESQuery{Query: eq.Bool(eq.WithMust(matches))}
	l, t, err := eq.QueryList[Books](es, "books", esQuery)
	if err != nil {
		return nil, nil, err
	}

	data := &eq.Data{Detail: l, Total: t}
	qinfo := &eq.Query{Index: "books", DSL: esQuery}
	return data, qinfo, nil
}
