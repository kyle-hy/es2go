// Code generated by es2go. DO NOT EDIT.

package model

import (
	"github.com/elastic/go-elasticsearch/v8"
	eq "github.com/kyle-hy/esquery"
)

// QueryBooksByAuthor 根据author查询books的详细数据
func QueryBooksByAuthor(es *elasticsearch.Client, author string) ([]*Books, int, error) {
	esQuery := eq.ESQuery{
		Query: eq.Match("author", author),
	}

	l, t, err := eq.QueryList[Books](es, "books", esQuery)
	if err != nil {
		return nil, 0, err
	}
	return l, t, nil
}

// QueryBooksByName 根据name查询books的详细数据
func QueryBooksByName(es *elasticsearch.Client, name string) ([]*Books, int, error) {
	esQuery := eq.ESQuery{
		Query: eq.Match("name", name),
	}

	l, t, err := eq.QueryList[Books](es, "books", esQuery)
	if err != nil {
		return nil, 0, err
	}
	return l, t, nil
}

// QueryBooksByAuthorName 根据author、name查询books的详细数据
func QueryBooksByAuthorName(es *elasticsearch.Client, author string, name string) ([]*Books, int, error) {
	queries := []eq.Map{
		eq.Match("author", author),
		eq.Match("name", name),
	}
	esQuery := eq.ESQuery{Query: eq.Bool(eq.WithMust(queries))}
	l, t, err := eq.QueryList[Books](es, "books", esQuery)
	if err != nil {
		return nil, 0, err
	}
	return l, t, nil
}
